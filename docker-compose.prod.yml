services:
  backend:
    extends:
      file: docker-compose.yml
      service: backend
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 4
    ports:
      - "8000:8000"
    env_file:
      - .env.prod  # Production-specific environment variables

  frontend:
    extends:
      file: docker-compose.yml
      service: frontend
    command: npm run build && serve -s build -l 3000  # Serve built files
    env_file:
      - .env.prod  # Production-specific environment variables
    ports:
      - "3000:3000"

  celery:
    container_name: x_tracker_celery 
    extends:
      file: docker-compose.yml
      service: backend
    command: celery -A config worker -l info
    depends_on:
      - db
      - redis
    env_file:
      - .env.prod
    restart: unless-stopped

  celery-beat:
    container_name: x_tracker_celery_beat 
    extends:
      file: docker-compose.yml
      service: backend
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - db
      - redis
      - celery_worker
    env_file:
      - .env.prod
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: x_tracker_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl  # SSL certificates
      - static_volume:/code/static  # Serve static files
    depends_on:
      - backend
    restart: unless-stopped